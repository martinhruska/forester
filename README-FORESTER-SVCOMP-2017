Instructions for SV-COMP'16
===========================

0) Dependencies:

   * GCC and G++
    - on Ubuntu/Debian provided by packages called 'g++' and 'gcc'.
    We tested our tool using 'gcc-5' for compiling test cases
	and 'g++-5' since it is a Ubuntu 16.04 default.

   * GCC plugin devel
     - on Ubuntu/Debian provided by a package called 'gcc-X-multilib' 'gcc-X-plugin-dev'
       where X is version of gcc, e.g. gcc-4.8-multilib for gcc version 4.8.

   * Python 3
     - on Ubuntu/Debian provided by a package called 'python3'

1) Forester can be run by the script './sv_comp_run.py'. This scripts assumes
   an existence of compiled Forester in form of the shared object file 'libfa.so'.

2) Use the script './sv_comp_run.py'
   to run Forester on a test-case:

    Usage: sv_comp_run.py [-h] --trace TRACE [--properties PROPERTIES] [--time] file

      -h
          Print help 

      --trace TRACE
          The file to print the witness to (for the answer FALSE)

      --properties PROPERTIES
          The file with the specified verification properties. When not
          specified, the default path for a property file in case of verified
		  file 'path/file' is 'path/ALL.prp'.

      --time
          Print consumed CPU time

      file
          The path to the file with program under verification

   Since Forester participates only in the HeapMemSafety category
   the 32-bit architecture is used by default and cannot be changed
   by any parameter of the script.

   A result of a verification task is an item from { TRUE, FALSE, UNKNOWN } and
   is printed to the standard output. When the result of a verification task is
   TRUE or FALSE, the related witness trace is printed to the file specified by the
   --trace option. When there are more verification properties to be checked
   and one of them is violated, the answer has the format FALSE(p) where p is
   the violated property.

3) For evalutation of Forester with 'Benchexec' use 'rundefinition' XML item
   for definition of parameter '--trace' in XML configuration file.
   The other attributes are set in function 'cmdline' in Forester wrapping script for 'Benchexec'.
   An example of configuration XML file for Benchexec is 'benchmark-example-forester.xml'
   in this folder.
